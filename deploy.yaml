########################################################################################################
#Persistence Volume Claim and Persistence Volume
######################################################################################################## 

#What do we want
apiVersion: v1
kind: PersistentVolumeClaim

metadata:
  name: yoogesh-pvc
    
spec:
  storageClassName: cloud-ssd
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      #Mysql says hey i need 20Gi storage. hey kubernates can you please fulfill it please.
      #Kubernates will dynamically allocated the storage with not less than 20Gi
      storage: 20Gi
  
---    

#What do we want it to be implemneted
apiVersion: storage.k8s.io/v1
kind: StorageClass

metadata:
  name: cloud-ssd
  
provisioner: kubernetes.io/aws-ebs
    
parameters:
  type: io1
  iopsPerGB: "10"
  fsType: ext4
  
---


apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: yoogeshmysql
  replicas: 1
  template: # template for the pods
    metadata:
      labels:
        app: yoogeshmysql
    spec:
      containers:
      - name: mysql
        image: mysql:8.0
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: password
        - name: MYSQL_DATABASE
          value: myDatabase
        volumeMounts:
          - name: yoogesh-mysql-persistence
            mountPath: /var/lib/mysql
      volumes:
        - name: yoogesh-mysql-persistence
          # pointer to the configuration of HOW we want the mount to be implemented
          persistentVolumeClaim:
            claimName: yoogesh-pvc
---
kind: Service
apiVersion: v1
metadata:
  name: yoogesh-database
spec:
  selector:
    app: yoogeshmysql
  ports:
  - port: 3306
  type: ClusterIP
  
  
  
  
---  
  
########################################################################################################
# This is Cluster Based Authentication (CBAC)

# Normally a Role Based Authentication (RBAC) is for only one namespace. so if you want to give an access to the user who can move around the cluster
# and has an access to create and deploy the application to any namespace he wants then go for CBAC.
######################################################################################################## 

apiVersion: rbac.authorization.k8s.io/v1

kind: ClusterRole

metadata: 
  name: new-joiner
  
rules:

- apiGroups: ["", "apps", "autoscaling", "extensions"]
  resources: ["*"]                                         # pods, services, deployments...
  verbs: ["get", "list", "watch"]                          # User is get Only a read acess i.e. get call, listout calls and watch for change


---

apiVersion: rbac.authorization.k8s.io/v1

kind: ClusterRoleBinding

metadata:
  name: CLUSTER_ROLE_BINDING_NEW_JOINER

subjects:

- kind: User
  name: ysharma@kksoftware.com
  
- kind: User
  name: sushila@kksoftware.com

roleRef:
  kind: ClusterRole
  name: new-joiner
  apiGroup: rbac.authorization.k8s.io
  
  
---

########################################################################################################
#Role Based Authentication (RBAC)

# Here we want to give a user to ALL access at "playground" namespace But only a READ access to other namespaces
######################################################################################################## 

apiVersion: rbac.authorization.k8s.io/v1

kind: Role

metadata: 
  name: new-joiner
  namespace: playground
  
rules:

- apiGroups: ["", "apps", "extensions"]
  resources: ["*"] 
  verbs: ["*"]                             #"get", "list", "watch", "patch", "batch" etc...
  
  
---
apiVersion: rbac.authorization.k8s.io/v1

kind: RoleBinding

metadata:
  name: ROLE_BINDING_NEW_JOINER
  namespace: playground

subjects:

- kind: User
  name: ysharma@kksoftware.com
  
- kind: User
  name: sushila@kksoftware.com

roleRef:
  kind: Role
  name: new-joiner
  apiGroup: rbac.authorization.k8s.io
 
  
