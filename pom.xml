<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	
	<modelVersion>4.0.0</modelVersion>
	
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.8.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	
	<groupId>com.yoogesh</groupId>
	<artifactId>springbootsecurity</artifactId>
	<version>1.0</version>
	<packaging>war</packaging>
	
	<name>${project.artifactId}</name>
	<description>SpringBootSecurity with Annotation approch</description>

	<properties>
	    <!-- This encoding is needed while creating docker images -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		
		<!-- Maven compiler setting -->
		<maven.compiler.source>13</maven.compiler.source>
		<maven.compiler.target>13</maven.compiler.target>
		
		<!-- Java version -->
		<java.version>13</java.version>
		
		<!-- Log4j version -->
		<apache-log4j.version>1.2.17</apache-log4j.version>
		
		<!-- Spring state machine version -->
		<springstateMachine.version>2.1.3.RELEASE</springstateMachine.version>
		
		<!-- ItextPDF version -->
		<itextpdf.version>[5.5.10,)</itextpdf.version>
		
		<!-- HtmlToPDF version -->
		<html2pdf.version>[2.1.6,)</html2pdf.version>
		
		<!-- JsonWebToken version -->
		<jsonwebtoken.version>0.9.1</jsonwebtoken.version>
		
		<!-- Eureka client version -->
		<spring.cloud.config.client.version>[2.2.1,)</spring.cloud.config.client.version>
		<spring.cloud.kubernetes.version>[1.1.3,)</spring.cloud.kubernetes.version>
		
	</properties>

	<dependencies>
	   <!-- Necessary for Every SpringBoot War -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		
		<!--  This tomcat is fine if you want total Rest application. however it won't work if you have JSP. for this you need to use the below one.
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>  --> 
		
		<dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-jasper</artifactId>
        </dependency>		
		 
		<dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
        </dependency>
        
        <dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
		</dependency>
		
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>javax.servlet.jsp-api</artifactId>
			<version>2.3.1</version>
		</dependency>
       
       
         <!-- OAuth2 and Spring Security related -->
        <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		
		<!-- JWT token related -->
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<version>${jsonwebtoken.version}</version>
		</dependency>
		
		
		<!-- Database and persistence related -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		
		<dependency>
		    <groupId>mysql</groupId>
		    <artifactId>mysql-connector-java</artifactId>
		</dependency>
		
		
		<!--  For Spring JPA -->
   		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-orm</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.springframework.data</groupId>
		    <artifactId>spring-data-jpa</artifactId>
		</dependency>
		
        <!-- For Hibernate -->
		<dependency>
		    <groupId>org.hibernate.javax.persistence</groupId>
		    <artifactId>hibernate-jpa-2.1-api</artifactId>
		    <version>1.0.0.Final</version>
		</dependency>
		<dependency>
		    <groupId>org.hibernate</groupId>
		    <artifactId>hibernate-core</artifactId>
		</dependency>	
		<dependency>
    		<groupId>org.hibernate.validator</groupId>
    		<artifactId>hibernate-validator</artifactId>
    	</dependency>
		
		<!-- Development tools related -->
	    <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>	
		

        <!-- Testing related -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		
        <!-- Since JaxB is removed from java version 11 or higher. we have to add below dependency. -->
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
		</dependency>
		<dependency>
		  	<groupId>javax.annotation</groupId>
		  	<artifactId>javax.annotation-api</artifactId>
		  </dependency>	<!--
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-core</artifactId>
			<version>2.3.0</version>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-impl</artifactId>
			<version>2.3.0</version>
		</dependency> -->
		
		<!-- Needed for XML View (with JAXB2) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
		</dependency>

		<!-- Needed for JSON View (JsonMessageConverter) -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
		</dependency>
		
		<!-- for StringUtils -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<!-- for IOUtils -->
		<dependency>
		    <groupId>org.apache.commons</groupId>
		    <artifactId>commons-io</artifactId>
		    <version>1.3.2</version>
		</dependency>
		<!-- for "org.apache.commons.codec.binary.Base64" -->
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
		</dependency>
		
		<!-- For Apache httpclient -->
		<dependency>
		    <groupId>org.apache.httpcomponents</groupId>
		    <artifactId>httpclient</artifactId>
		</dependency>

		

		
		
		<!-- For Log4J logging -->
		<dependency>
		    <groupId>log4j</groupId>
		    <artifactId>log4j</artifactId>
		    <version>${apache-log4j.version}</version>
		</dependency>
		
		<!-- Need for Spring state Maching -->
		<dependency>
    		<groupId>org.springframework.statemachine</groupId>
    		<artifactId>spring-statemachine-core</artifactId>
    		<version>${springstateMachine.version}</version>
		</dependency>	
		
		<!-- Convert from html to pdf -->
		<dependency>
			<groupId>com.itextpdf</groupId>
			<artifactId>itextpdf</artifactId>
			<version>${itextpdf.version}</version>
		</dependency>
		<dependency>
			<groupId>com.itextpdf.tool</groupId>
			<artifactId>xmlworker</artifactId>
			<version>${itextpdf.version}</version>
		</dependency>
		
		<dependency>
			<groupId>com.itextpdf</groupId>
			<artifactId>html2pdf</artifactId>
			<version>${html2pdf.version}</version>
		</dependency>
		
		<!-- For Swagger 3.0 -->
		<dependency>
    		<groupId>org.springdoc</groupId>
    		<artifactId>springdoc-openapi-ui</artifactId>
    		<version>1.4.8</version>
		</dependency>
		
		<!-- For Spring cloud config 
		<dependency>
		    <groupId>org.springframework.cloud</groupId>
		    <artifactId>spring-cloud-config-client</artifactId>
		    <version>${spring.cloud.config.client.version}</version>
		</dependency> -->
		
		<!-- For Spring Cloud Kubernetes 
		<dependency>
		    <groupId>org.springframework.cloud</groupId>
		    <artifactId>spring-cloud-starter-kubernetes-config</artifactId>
		    <version>${spring.cloud.kubernetes.version}</version>
		</dependency> -->
		
		<!-- For @ConfigurationProperties annotation -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- For WebSockets -->
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>sockjs-client</artifactId>
			</dependency>
		<dependency>
			 <groupId>org.webjars</groupId>
			 <artifactId>webjars-locator-core</artifactId>
		</dependency>
		<dependency>
			 <groupId>org.webjars</groupId>
			 <artifactId>stomp-websocket</artifactId>
			 <version>2.3.3</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-websocket</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-messaging</artifactId>
		</dependency>
		
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<executable>false</executable>
					<finalName>${project.artifactId}</finalName> <!-- this will get rid of version info from war file name -->
				</configuration>
			</plugin>
			
			
			<!-- Docker build start -->
			
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.21.0</version>
				<configuration>
        				<!--  <dockerHost>http://127.0.0.1:2375</dockerHost> -->        
        				<!--  this is for Mac and Amazon Linux -->
        				 <dockerHost>unix:///var/run/docker.sock</dockerHost>
        				
        				<verbose>true</verbose>
        
        				<!-- Needed if pushing to DockerHub: preferred to store these in local environment (see the course) -->
        				<authConfig>
			  				<username>YOUR_DOCKER_USER_NAME</username>
              				<password>YOUR_DOCKER_PASSWORD</password>
        				</authConfig>
						<images>
							<image>
								<name>yoogesh1983/springbootsecurity:version_1.0</name>
								<build>
									<dockerFileDir>${project.basedir}/src/main/resources/devops/docker/</dockerFileDir>

                    				<!--copies Jar to the maven directory (uses Assembly system)-->
									<assembly>
										<descriptorRef>artifact</descriptorRef>
									</assembly>
									<tags>
										<tag>latest</tag>
									</tags>
								</build>
							</image>
						</images>
				</configuration>
				
				<!-- Comment below executions tag out if you are compiling outside the docker container -->
				<!-- Start execution 
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
					
					<execution>
						<id>mydeploy</id>
						<phase>deploy</phase>
						<goals>
							<goal>push</goal>
						</goals>
					</execution>						
				</executions> -->
				<!--  end execution -->
				
				
			</plugin>
			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>

			
			<!-- Docker build end -->
			
		</plugins>
	</build>
	
	
	<!-- Dependency Management -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.webjars</groupId>
				<artifactId>sockjs-client</artifactId>
				<version>1.1.2</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
</project>
